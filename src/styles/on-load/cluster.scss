@use './../base/global';
@use './../base/utils';
@use 'sass:map';

$gap: 4px; //Only use EVEN #px else animation will be misaligned
$dimension: 75px;
$translate-value: calc(($dimension / 4) + $gap);
$translate-value-negative: calc($translate-value * -1);
$left-shift: calc($dimension * 1.5 * -1);
$right-shift: calc($dimension * 1.5);

@keyframes Middle-To-Down{
  0%{
    transform: translateY(0px);
  }
  100%{
    transform: translateY($translate-value);
  }
}

@keyframes MiddleLeft-To-Up{
  0%{
    transform: translate($left-shift, 0px)
  }
  100%{
    transform: translate($left-shift, $translate-value-negative)
  }
}

@keyframes MiddleRight-To-Up{
  0%{
    transform: translate($right-shift, 0px)
  }
  100%{
    transform: translate($right-shift, $translate-value-negative)
  }
}

@keyframes Slide-Off{
  0%{
    transform: translateX(0px);
  }
  100%{
    transform: translateX(100vw);
  }
}

body, 
#on-load-overlay{
  overflow: hidden;
}

#on-load-overlay{
  height: 100%;
  width: 100%;
  isolation: isolate;
  display: grid;
  place-items: center;
  background-color: global.$background;
  animation: Slide-Off 
    global.$kf-slide-timing
    map.get(global.$delays, "last")
    cubic-bezier(.45,.33,.31,1.13)
    forwards;

  *{
    grid-area: 1/1;
  }
  
  .cluster{
    width: $dimension;
    height: $dimension;
    border: $gap solid global.$dark;
    outline: calc($gap * 2) solid global.$background; //Colors the margin space
    background-color: global.$background;
    display: grid;  
    grid-template-areas: 
      "a b"
      "c b";
    gap: $gap;
    padding: $gap;
    animation: Middle-To-Down 
      global.$kf-timing
      map.get(global.$delays, "second")
      ease 
      forwards;

    .child{
      background-color: global.$dark;
    }
    
    .square[pos="upper"]{
      grid-area: a;
    }

    .rect{
      grid-area: b;
    }

    .square[pos="lower"]{
      grid-area: c;
    }
  }

  .cluster[color-swapped]{
    border: $gap solid global.$background;
    outline: calc($gap * 2) solid global.$dark; //Colors the margin space
    background-color: global.$dark;

    .child{
      background-color: global.$background;
    }    
  }

  .cluster[color-swapped][pos="left"]{
    transform: translateX($left-shift);
    animation: MiddleLeft-To-Up 
      global.$kf-timing 
      map.get(global.$delays, "first")
      forwards
      ease;
  }

  .cluster[color-swapped][pos="right"]{
    transform: translateX($right-shift);
    animation: MiddleRight-To-Up 
      global.$kf-timing 
      map.get(global.$delays, "third")
      forwards
      ease;
  }
  
  #half-background{
    z-index: -1;
    height: 50%;
    width: 100%;
    transform: translateY(50%);  
    background-color: global.$dark;
  }
}